@model TfsStatesModel

@{
    ViewData["Title"] = "Home Page";
}

<h2>TFS States Report</h2>

<form asp-antiforgery="true" asp-controller="Home" asp-action="RunReport" id="reportForm">

    @if (Model.RunReadyState != null
    && !Model.RunReadyState.IsReady
    && !string.IsNullOrEmpty(Model.RunReadyState.Message))
    {
        <div class="alert alert-warning alert-dismissible" role="alert" id="readyAlert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            @Html.Raw(Model.RunReadyState.Message)
        </div>
    }

    <div class="row">
        <div class="col-md-6">
            <label asp-for="Project" class="control-label"></label>
            <select asp-for="Project" asp-items="@(new SelectList(Model.Projects))" id="Project"></select>
        </div>

        <div class="col-md-6">
            <label asp-for="Iteration" class="control-label">Iteration Under</label>
            <select asp-for="Iteration" asp-items="@(new SelectList(Model.Iterations))" id="Iteration"></select>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <input type="submit" id="runButton" value="Run Report" />
        </div>
    </div>

    <div class="row" id="progressContainer" style="display: none; margin-top: 20px;">
        <div class="col-md-12">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">
                        Work Items Processed <span class="badge" id="progressCount">0</span>
                    </h3>
                </div>
                <div class="panel-body" id="progressMessage">
                    Running report...
                </div>
            </div>
        </div>
    </div>

    @if (Model.FinalProgress != null) { 
    <div class="row" style="margin-top: 20px;">
        <div class="col-md-12">
            <div class="panel panel-success">
                <div class="panel-heading">
                    <h3 class="panel-title">
                        Work Items Processed <span class="badge">@Model.FinalProgress.WorkItemsProcessed</span>
                    </h3>
                </div>
                <div class="panel-body">
                    <div>@Model.FinalProgress.Message</div>
                   
                    @if (Model.ResultFilename != null) {
                    <div style="margin-top: 10px;">
                        <a id="viewReport" href="javascript: viewReport('@Model.ResultFilename');">View Report</a>
                    </div>
                    }

                    <div id="viewReportResult" style="margin-top: 10px;"></div>
                </div>
            </div>
        </div>
    </div>
    }
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script type="text/javascript">
        var allIterationsOption = function () {
            return '<option value="">All Iterations</option>';
        };

        var getIterations = function (projectName, index) {
            var url = "/home/iterations/" + projectName;
            var iterationCombo = $('#Iteration');
            iterationCombo.html('<option value="">Loading...</option>');

            if (index > 0) {
                $.get(url, function (data) {
                    var output = [];
                    output.push(allIterationsOption());

                    $.each(data, function (key, value) {
                        output.push('<option value="' + value + '">' + value + '</option>');
                    });

                    iterationCombo.html(output.join(''));
                })
                .fail(function () {
                    iterationCombo.html(allIterationsOption());
                })
                .always(function () {
                });
            }
            else {
                iterationCombo.html(allIterationsOption());
            }
        };

        var viewReport = function (name) {
            var url = "/home/viewreport/" + name;

            $.get(url, function (filename) {
                $('#viewReportResult').html("Launched " + filename);
            })
            .fail(function () {
                $('#viewReportResult').html("Error launching report " + name);
            })
            .always(function () {
            });            
        };

        $(function () {
            const { ipcRenderer } = require("electron");

            $("#Project").change(function () {
                getIterations(this.value, this.selectedIndex);
            });

            $('#Iteration').html(allIterationsOption());

            $("#reportForm").submit(function (event) {
                $("#runButton").prop('disabled', true);
                $("#progressContainer").show();
            });

            ipcRenderer.on('report-progress', (event, arg) => {
                $('#progressMessage').html(arg.message);

                if (arg.workItemsProcessed) {
                    $('#progressCount').html(arg.workItemsProcessed);
                }
            });
        });
    </script>
}

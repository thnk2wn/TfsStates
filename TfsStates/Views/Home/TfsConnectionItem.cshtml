@{
    Layout = null;
}

@model TfsStates.ViewModels.TfsConnectionItemViewModel

<div class="row connection-root" data-id="@Model.Id">
    <form asp-antiforgery="true"
          asp-controller="Settings"
          asp-action="SaveConnection"
          class="connectionForm"
          id="connectionForm_@Model.Id"
          onsubmit="onSavingConnection(this)">
        <input type="hidden" name="Id" value="@Model.Id" />
        <hr style="border-color: black" />
        <div asp-validation-summary="All" class="text-danger"></div>
        <fieldset>
            <div class="row">
                <label asp-for="ConnectionType" class="col-md-2 control-label"></label>

                <div class="form-group col-md-10">
                    <select asp-for="ConnectionType"
                            asp-items="@(new SelectList(Model.ConnectionTypes))"
                            class="connection-type"
                            onchange="onConnectionTypeChange(this)">
    
                </select>
                </div>
            </div>

            <div class="row">
                <label asp-for="Url" class="col-md-2 control-label"></label>
                <div class="form-group col-md-10">
                    <input asp-for="Url" class="form-control url" />
                    <span asp-validation-for="Url" class="text-danger"></span>
                    <div>
                        <small class="url-example"></small>
                    </div>
                </div>
            </div>

            <div class="row default-creds-row" style="display: none;">
                <div class="col-md-12">
                    <div class="checkbox">
                        <label asp-for="UseDefaultCredentials">
                            <input 
                                asp-for="UseDefaultCredentials" 
                                type="checkbox" 
                                class="use-default-credentials" 
                                onchange="onWindowsIdentityChange(this)" />
                            Use Default Credentials
                        </label>
                    </div>
                </div>
            </div>

            <div class="row user-creds-row" style="display: none;">
                <label asp-for="Username" class="col-md-1 control-label"></label>
                <div class="form-group col-md-5">
                    <input asp-for="Username" class="form-control username" />
                    <span asp-validation-for="Username" class="text-danger"></span>
                </div>

                <label asp-for="Password" class="col-md-1 control-label"></label>
                <div class="form-group col-md-5">
                    <input asp-for="Password" class="form-control password" value="@Model.Password" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
            </div>

            <div class="row token-row" style="display: none;">
                <label asp-for="PersonalAccessToken" class="col-md-2 control-label"></label>
                <div class="form-group col-md-10">
                    <input asp-for="PersonalAccessToken" class="form-control" value="@Model.PersonalAccessToken" />
                    <span asp-validation-for="PersonalAccessToken" class="text-danger"></span>
                    <div>
                        <a class="azure-devops-pat-docs" href="javascript:;" onclick="azureDevOpsTokenHelp();">Instructions</a>
                        <small>(only Read Work Items needed)</small>
                    </div>
                </div>
            </div>
        </fieldset>

        <input type="submit" class="btn btn-primary save-button" value="Save" />

        <button type="button" class="btn btn-danger delete-button" style="margin-left: 40px;">
            <span class="glyphicon glyphicon-trash" aria-hidden="true"></span> Delete
        </button>

        <blockquote class="saving-label" style="margin-top: 20px; display: none;"></blockquote>

        @if (Model.ValidationResult != null
        && !Model.ValidationResult.IsError
        && !string.IsNullOrEmpty(Model.ValidationResult.Message))
        {
            <div class="alert alert-success alert-dismissible tfs-settings-validate-success" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                @Model.ValidationResult.Message
            </div>
        }
    </form>
</div>